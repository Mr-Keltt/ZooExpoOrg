@page "/login"
@using ZooExpoOrg.Web.Services.Accounts
@using System.ComponentModel.DataAnnotations
@using ZooExpoOrg.Web.Services.Auth
@using ZooExpoOrg.Web.Shared.Layouts;


@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div style="overflow: hidden;">
    <MudGrid Justify="Justify.Center" >
        <MudItem Class="ma-10" xs="10" sm="8">
            <MudPaper Class="pa-4">
                <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                    
                    <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-3">Вход</MudText>
    
                    <MudAlert Severity="Severity.Error" Class="@(ShowErrors ? "mb-3 d-block" : "d-none")">
                        @Error
                        <br />
                        @ErrorDetail
                    </MudAlert>
    
                    <MudTextField T="string"
                                    @bind-Value="model.UserName" For="@(() => model.UserName)"
                                    Label="Логин" 
                                    Required="true" 
                                    RequiredError="Логин обязателен"
                                    HelperText="Введите ваш логин"/>
                    <MudTextField @bind-Value="model.Password" For="@(() => model.Password)"
                                    Label="Пароль"
                                    HelperText="Введите ваш пароль"
                                    InputType="@PasswordInput"
                                    Adornment="Adornment.End"
                                    AdornmentIcon="@PasswordInputIcon"
                                    Required="true"
                                    RequiredError="Пароль обязателен"
                                    OnAdornmentClick="TogglePasswordVisibility" />
    
                    <div Class="d-flex justify-space-between align-center">
                        <MudCheckBox For="@(() => model.RememberMe)" @bind-Checked="model.RememberMe" Label="Запомнить пользователя?" Color="Color.Primary" Class="ml-n1 my-3"></MudCheckBox>
                    </div>
    
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled"
                            Color="Color.Primary"
                            Size="Size.Medium"
                            ButtonType="ButtonType.Submit">Войти</MudButton>
    
                        <MudSpacer />
    
                        <MudButton Class="" Variant="Variant.Filled"
                            Color="Color.Secondary"
                            Size="Size.Medium"
                            OnClick="@GoToRegister">Регистрация</MudButton>
                    </MudCardActions>
                </EditForm>
            </MudPaper>
        </MudItem>
    </MudGrid>
</div>

@code {
    bool success;
    MudForm form;

    private LoginModel model = new LoginModel();

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private bool ShowErrors;
    private string Error;
    private string ErrorDetail;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task OnValidSubmit()
    {
        ShowErrors = false;
        Error = "";
        ErrorDetail = "";

        var result = await AuthService.Login(model);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            if (result.Error == "invalid_grant")
            {
                Error = "Логин обязателен";
            }
            else
            {
                Error = result.Error;
            }

            if (result.ErrorDescription == "invalid_username_or_password")
            {
                Error = "Не верный логин или пароль";
            }
            else
            {
                ErrorDetail = result.ErrorDescription;
            }


            ShowErrors = true;
        }
    }

    private void GoToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}
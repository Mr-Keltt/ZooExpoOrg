@using ZooExpoOrg.Web.Services.Clients;
@using ZooExpoOrg.Web.Services.Configuration
@using Microsoft.AspNetCore.Components.Authorization
@using ZooExpoOrg.Web.Services.GetIdHelper;

@inherits LayoutComponentBase

@inject IConfigurationService ConfigurationService
@inject IClientService ClientService
@inject IGetIdHelperService GetIdHelper
@inject ISnackbar Snackbar

<MudThemeProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggleAsync" />
        <MudText Typo="Typo.h4" Class="ml-3">ZooExpoOrg</MudText>
        <MudSpacer />

        <AuthorizeView>
            <Authorized>
                @if (client != null)
                {
                    <MudText Typo="Typo.h6" Class="ml-3">@client.Name</MudText>
                }
            </Authorized>
        </AuthorizeView>
        
        <UserMenu />
    </MudAppBar>
    <MudDrawer @bind-Open="drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        
    </MudMainContent>
</MudLayout>

@code {
    private bool drawerOpen = true;
    private VueClientModel client;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            drawerOpen = await ConfigurationService.GetNavigationMenuVisibleAsync();

            await ReloadClientData();
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }

    private async Task DrawerToggleAsync()
    {
        drawerOpen = !drawerOpen;
        await ConfigurationService.SetNavigationMenuVisibleAsync(drawerOpen);
    }

    private async Task ReloadClientData()
    {
        Guid clientId = await GetIdHelper.GetClientId();

        client = await ClientService.GetClient(clientId);
    }


}
